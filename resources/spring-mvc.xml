<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    <context:property-placeholder location="classpath:resources.properties"/>-->

    <!-- 开启controller注解支持 -->
    <!-- 注意事项请参考：http://jinnianshilongnian.iteye.com/blog/1762632 -->
    <context:component-scan base-package="com.admin.controllers"/>
    <context:component-scan base-package="com.api"/>
    <context:component-scan base-package="bds.controllers"/>

    <!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>


    <!-- if you use annotation you must configure following setting -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.admin.controllers.bind.method.CurrentUserMethodArgumentResolver"/>
            <!-- 让Device支持在注解的controller中使用 -->
            <bean class="org.springframework.mobile.device.DeviceWebArgumentResolver"/>
            <!-- 让SitePreference支持在注解的controller中使用 -->
            <bean class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- spring mobile 配置-->
    <bean id="deviceResolverHandlerInterceptor"
          class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor"/>
    <bean id="sitePreferenceHandlerInterceptor"
          class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor"/>
    <!--    Spring Mobile会自动帮你进行站点切换，当然你也可以将 factory-method 设置为 " urlPath",那么他将会把移动用户重定向到url地址,设置为 "mDot",那么他将会把移动用户重定向到站点切换-->
    <!--    <bean id="siteSwitcherHandlerInterceptor" class="org.springframework.mobile.device.switcher.SiteSwitcherHandlerInterceptor" factory-method="mDot">-->
    <!--        <constructor-arg value="www.xmjrkj.com" />-->
    <!--    </bean>-->
    <mvc:interceptors>
        <ref bean="deviceResolverHandlerInterceptor"/>
        <ref bean="sitePreferenceHandlerInterceptor"/>
        <!--        <ref bean="siteSwitcherHandlerInterceptor"/>-->
    </mvc:interceptors>
    <!-- spring mobile 配置-->


    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>
    <mvc:resources mapping="/userfiles/**" location="/uploadfile/"/>
    <mvc:resources mapping="/resources/**" location="classpath:/META-INF/resources/"/>
<!--    <mvc:resources mapping="/resources/**" location="classpath:/META-INF/resources/"/>-->


    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:order="1">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>

    <bean class="com.admin.controllers.exception.DefaultExceptionHandler"/>

    <import resource="spring-mvc-shiro.xml"/>


</beans>
